// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication2;

namespace TestDoubleThenInclude.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210224150056_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication2.ApplicationDbContext+ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUsers");
                });

            modelBuilder.Entity("WebApplication2.ApplicationDbContext+PhoneNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PhoneNumber");
                });

            modelBuilder.Entity("WebApplication2.ApplicationDbContext+UserInformation", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserInformation");
                });

            modelBuilder.Entity("WebApplication2.ApplicationDbContext+UserInformationPhoneNumber", b =>
                {
                    b.Property<int>("PhoneNumberId")
                        .HasColumnType("int");

                    b.Property<int>("UserInformationId")
                        .HasColumnType("int");

                    b.HasKey("PhoneNumberId", "UserInformationId");

                    b.HasIndex("UserInformationId");

                    b.ToTable("UserInformationPhoneNumber");
                });

            modelBuilder.Entity("WebApplication2.ApplicationDbContext+UserInformation", b =>
                {
                    b.HasOne("WebApplication2.ApplicationDbContext+ApplicationUser", "User")
                        .WithOne("Information")
                        .HasForeignKey("WebApplication2.ApplicationDbContext+UserInformation", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApplication2.ApplicationDbContext+UserInformationPhoneNumber", b =>
                {
                    b.HasOne("WebApplication2.ApplicationDbContext+PhoneNumber", "PhoneNumber")
                        .WithMany()
                        .HasForeignKey("PhoneNumberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication2.ApplicationDbContext+UserInformation", "UserInformation")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("UserInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhoneNumber");

                    b.Navigation("UserInformation");
                });

            modelBuilder.Entity("WebApplication2.ApplicationDbContext+ApplicationUser", b =>
                {
                    b.Navigation("Information");
                });

            modelBuilder.Entity("WebApplication2.ApplicationDbContext+UserInformation", b =>
                {
                    b.Navigation("PhoneNumbers");
                });
#pragma warning restore 612, 618
        }
    }
}
